<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Unboxed Developer Newsletter]]></title>
  <link href="http://unboxed.github.com/newsletter/atom.xml" rel="self"/>
  <link href="http://unboxed.github.com/newsletter/"/>
  <updated>2012-07-09T15:07:39+01:00</updated>
  <id>http://unboxed.github.com/newsletter/</id>
  <author>
    <name><![CDATA[Unboxed Developers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Better Late Than Never]]></title>
    <link href="http://unboxed.github.com/newsletter/blog/2012/07/09/better-late-than-never/"/>
    <updated>2012-07-09T14:15:00+01:00</updated>
    <id>http://unboxed.github.com/newsletter/blog/2012/07/09/better-late-than-never</id>
    <content type="html"><![CDATA[<h2>jQuery - Use it but don&#8217;t host it! (Matt P)</h2>

<p>Don&#8217;t copy jQuery onto your website - let Google host it for you.  Here are 3 reasons why:
<a href="http://encosia.com/3-reasons-why-you-should-let-google-host-jquery-for-you/">http://encosia.com/3-reasons-why-you-should-let-google-host-jquery-for-you/</a></p>

<h2>Dooms<s>day</s>weekend (Matt P)</h2>

<p>Last weekend there were huge outages on various parts of the internet. Two primary causes, independent of one another, were responsible.</p>

<h1>Issue 1:</h1>

<p>the Leap Second which happened at 23:59:60 June 30th caused lockup or load to skyrocket in a large number of Linux machines.  This caused a few of our machines to keel over, but was also quite a wide-impacting bug; companies affected include Twitter, LinkedIn, AWS, Pinterest, Instagram, Stumbleon and Reddit. For those who care, technical information (including Kernel internals) can be found at
<a href="http://serverfault.com/questions/403732/anyone-else-experiencing-high-rates-of-linux-server-crashes-during-a-leap-second">http://serverfault.com/questions/403732/anyone-else-experiencing-high-rates-of-linux-server-crashes-during-a-leap-second</a></p>

<h1>Issue 2:</h1>

<p>Power issues in the Amazon Cloud meant that one of their 10% availability zones failed. Dramatically.  Full details at <a href="http://aws.amazon.com/message/67457/">http://aws.amazon.com/message/67457/</a></p>

<h2>It&#8217;s time for Skype (Rob P)</h2>

<p>A very nice Skype microsite by B-Reel. I love the user interaction bits and bobs! Lovely, seamless animations and sexy interactive demos.
One thing about the site is Facebook connect: it has absolutely no benefit to the user, only some fetched-in images, and you can facebook-mail your friends about the website (hurraay), that&#8217;s fantastic, NOT.</p>

<p><a href="http://itstimefor.skype.com">http://itstimefor.skype.com</a></p>

<h2>Try Git In Your Browser (Seb)</h2>

<p>Last week Github launched their CodeSchool style service for teaching people Git.
<a href="http://try.github.com">http://try.github.com</a></p>

<h2>CocoaPods (Seb)</h2>

<p>I have recently been playing around with iOS, and came across a package dependency manager for Cocoa, no longer do you have to deal with linking external libaries with your xcode project.</p>

<p><a href="http://cocoapods.org/#get_started">http://cocoapods.org/#get_started</a></p>

<p>anyone fancy updating iCuke and packing it up as a CocoaPod?</p>

<p><a href="https://github.com/unboxed/icuke">https://github.com/unboxed/icuke</a></p>

<h2>Hatchet (Joerg)</h2>

<p>We are extremely excited to share a new product with you:</p>

<p><a href="https://hatchetapp.net">hatchetapp.net</a></p>

<p>Hatchet is an online planning poker app - yes, another one - a speciality of our little purple company it seems. Myself and Rich A tenderly developed it in the last two weeks. It makes use of Nodejs, Angularjs, Socket.io, Bootstrap, and responsive design. All kinds of good stuff, basically.</p>

<p>Please send us any feedback to make this thing so badass so that you will want to use it at your next planning session, and also would want to tell your partners about it.</p>

<p>Be kind - Hatchet is currently in beta of course, and any feedback you could send us would be greatly appreciated.</p>

<h2>Stasis (Seb)</h2>

<p>I came across this the other day, it&#8217;s a ruby framework for serving static content.</p>

<p><a href="http://stasis.me/">stasis.me</a></p>

<h2>Music Hackday(Barcelona) - A late update(Seb)</h2>

<p>This was my second music hackday, and unlike the back in March, I actually presented something.
Here&#8217;s a list of the hacks
<a href="http://wiki.musichackday.org/index.php?title=Barcelona_Hacks_2012">wiki.musichackday.org/index.php?title=Barcelona_Hacks_2012</a></p>

<p>If you want to hear me talking about my hack you can hear me on this bbc podcast, 10 minutes in.
<a href="http://downloads.bbc.co.uk/podcasts/fivelive/pods/pods_20120619-0515a.mp3">BBC Outriders Podcast</a></p>

<p>There are 3 upcoming hackdays which are soon to be revealed, will let you know more when more details are available.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ALL the dev things]]></title>
    <link href="http://unboxed.github.com/newsletter/blog/2012/06/29/new-post/"/>
    <updated>2012-06-29T13:59:00+01:00</updated>
    <id>http://unboxed.github.com/newsletter/blog/2012/06/29/new-post</id>
    <content type="html"><![CDATA[<p>[Enter food-related obligatory dev-newsletter pun here].</p>

<h2><a href="http://tinypng.org/">TinyPNG</a> (via Lee)</h2>

<p>Advanced lossy compression for PNG images that preserves full alpha transparency.</p>

<h2><a href="http://www.placekitten.com/">PlaceKitten</a> (via Alan)</h2>

<p>Technically submitted by Alan, but credit goes partially to Matt P for submitting this two weeks ago.</p>

<p>Quote from last time this was submitted: &#8220;Stock images of kittens, sizeable to whatever size you can need. Useful when mocking up a site. Like the lorem ipsum, but with images.&#8221;</p>

<h2><a href="http://mir.aculo.us/2012/06/26/flowchart-how-to-retinafy-your-website/">Flowchart: How to Retinafy Your Website</a> (via Ben)</h2>

<p>With Retina screens all around us, itâ€™s time to take the plunge and retinafy your website or webapp.</p>

<h2><a href="http://www.wired.com/beyond_the_beyond/2012/06/turing-centenary-speech-new-aesthetic/">Turing Centenary Speech (New Aesthetic)</a> (via Ben)</h2>

<p>Self explanatory really - have a read.</p>

<h2><a href="https://lh5.googleusercontent.com/-qhOrCA0YOcs/T88ahvVjlpI/AAAAAAAAGYY/nqntKXC9fic/s372/92.gif">ActiveRecord Niceness</a> (via Joerg)</h2>

<p>Here&#8217;s a thing I never knew about ActiveRecord, and not sure when it slipped in: So - imagine you have the following setup:</p>

<pre><code>class Contact &lt; ActiveRecord::Base
  has_many :addresses
end

class Address &lt; ActiveRecord::Base
  belongs_to :contact
end
</code></pre>

<p>Then, contact.address_ids gives you an array of ids of all your addresses.</p>

<h2><a href="https://lh3.googleusercontent.com/-oBx-Gxby-dY/T5UaoPTtouI/AAAAAAAAGO8/P3Vlsxgi_9A/s500/84.gif">SQL Binding</a> (via Jolyon)</h2>

<p>I was convinced writing sql (or sequel) to use bind variables must be better than hardcoding from a performance perspective but my confidence was shaken when reading about <a href="http://patshaughnessy.net/2011/10/22/show-some-love-for-prepared-statements-in-rails-3-1">prepared statements</a>.
Mind you, from a sql injection and readability perspective, I think binding remains preferable.</p>

<h2><a href="http://destroyallsoftware.com">Destroy All Software</a> (via Attila)</h2>

<p>Most of us like RailsCasts, right? OK, screencasts are great to demonstrate and teach people about programming. Now, it became clear to me that not everybody knows about the website in subject. It features short (10-15 mins long) very focused technical screencasts, most of the time related to Ruby (although sometimes it covers Python and other related techness as well). Some of the most interesting things DAS covered in the past:</p>

<ul>
<li>How to implement RSpec from scratch</li>
<li>How and why to avoid nil</li>
<li>Pretty git logs</li>
<li>etc.</li>
</ul>


<p>The catalog contains about 70 screencasts as of now. All I can say is that it became one of my favourite sources to learn more about software architecture, more specifically about how to do advanced things in Ruby. This guy is extremely clever, very opinionated yet reasonable. Very good material, definitely worths the subscription. (Yeah it&#8217;s not free but I think it&#8217;s reasonably priced.)</p>

<p>You should also watch <a href="https://www.destroyallsoftware.com/talks/wat/">this lightning talk</a> by the same guy if you haven&#8217;t seen it yet, very entertaining.</p>

<h2><a href="https://lh4.googleusercontent.com/-WoHQ-j8FqCI/T5Ubj2T3BpI/AAAAAAAAGPw/FlhFIFS845A/s324/81.gif">Rails 4.0 Sneak Peek: Queueing</a> (via Attila)</h2>

<p><a href="http://reefpoints.dockyard.com/ruby/2012/06/25/rails-4-sneak-peek-queueing.html">Seen this?</a></p>

<h2><a href="http://blog.jquery.com/2012/06/28/jquery-core-version-1-9-and-beyond/">JQuery 2.0</a> (via Robert P)</h2>

<p>JQuery 2.0 is coming early 2013. One of the highlights ahead is that they will remove all support for IE6/7/8 browsers.</p>

<h2><a href="http://jqvmap.com/">jQuery Vector Maps using SVG</a> (via Robert P)</h2>

<p>Not as great as GMaps, but much lighter and it actually looks all right. Supports Explorer 6-8 using VML.</p>

<h2><a href="http://darcyclarke.me/dev/repojs/">Repo.js</a> (via Robert P)</h2>

<p>If you ever wanted to include github repos on your site&#8230;</p>

<h2><a href="http://37signals.com/svn/posts/3191-announcing-pow-040-with-xipio-support">Pow 0.4.0 with xip.io support</a> (via Attila)</h2>

<p>Did anybody try this out? I would love to know if anybody has done something with this.</p>

<h2><a href="http://www.apple.com/ios/ios6/">iOS 6 Beta Updates</a> (via Attila)</h2>

<p>If you have installed the beta on your phone as soon as Apple made it available to the iOS devs, you may want to update your software on your phone. Funnily enough iTunes won&#8217;t do this for you (I guess it does not intend to handle beta upgrades) but your phone can upgrade itself. Go to <code>Settings -&gt; General -&gt; Software Update</code> and voila! Just a heads up.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The week in dev]]></title>
    <link href="http://unboxed.github.com/newsletter/blog/2012/06/22/the-week-in-dev/"/>
    <updated>2012-06-22T11:15:00+01:00</updated>
    <id>http://unboxed.github.com/newsletter/blog/2012/06/22/the-week-in-dev</id>
    <content type="html"><![CDATA[<p>This week&#8217;s tasty dev morsels for your delectation.</p>

<h2>Removing config.threadsafe! (Leo)</h2>

<p><a href="http://tenderlovemaking.com/2012/06/18/removing-config-threadsafe.html">http://tenderlovemaking.com/2012/06/18/removing-config-threadsafe.html</a></p>

<p>Aaron Patterson (@tenderlove) wrote an excellent article on the debate around the config.threadsafe! option in Rails, taking the side of those who would want to see it enabled in production by default. I found it a very interesting overview of the current state of concurrency and multithreaded execution in Rails, and I guarantee that it will teach you something new about Rails.</p>

<h2>RSpec&#8217;s new expectation syntax (Lee)</h2>

<p><a href="http://myronmars.to/n/dev-blog/2012/06/rspecs-new-expectation-syntax">http://myronmars.to/n/dev-blog/2012/06/rspecs-new-expectation-syntax</a></p>

<h2>/reFiddle+/ (Carl)</h2>

<p><a href="http://refiddle.com/">http://refiddle.com/</a></p>

<p>A fiddle tool for building and testing those tricky regex&#8217;s.</p>

<h2>My algorithm for finding self-enumerating pangrams found its first solution after 250 CPU hours (Chris P)</h2>

<p>This pangram was built by cpatuzzo and it has no more than nine a&#8217;s, three b&#8217;s, two c&#8217;s, three d&#8217;s, thirty-four e&#8217;s, five f&#8217;s, two g&#8217;s, twelve h&#8217;s, sixteen i&#8217;s, two j&#8217;s, one k, four l&#8217;s, three m&#8217;s, nineteen n&#8217;s, eleven o&#8217;s, three p&#8217;s, one q, thirteen r&#8217;s, thirty-six s&#8217;s, twenty-six t&#8217;s, six u&#8217;s, seven v&#8217;s, seven w&#8217;s, six x&#8217;s, five y&#8217;s and just three z&#8217;s.</p>

<h3>How it works:</h3>

<p>I turned the problem into error minimisation. Each attempt is an array of character frequencies, which is evaluated (using a lookup table) to determine the error magnitude. The &#8216;closest&#8217; solutions are selected for mutation. New attempts are ordered for evaluation according to the distribution of characters in the lookup table (language). The pool of attempts is pruned to ensure it doesn&#8217;t memory leak and slow everything down at the trade off of occasionally choosing a sub-optimal attempt for mutation. Very few sentence seeds actually have solutions, so there&#8217;s some code that randomises seeds on occasion.</p>

<p>It&#8217;s slow and probably not so elegant, but it works. It also makes the naive assumption that attempts with fewer errors will be closer to a solution, which is probably a flawed assumption due to the volatility and chaos of the problem.</p>

<p><a href="https://github.com/cpatuzzo/pangram">https://github.com/cpatuzzo/pangram</a>
<a href="http://en.wikipedia.org/wiki/Pangram#Self-enumerating_pangrams">http://en.wikipedia.org/wiki/Pangram#Self-enumerating_pangrams</a></p>

<h2>Parameter Chain (Chris P)</h2>

<p>As some of you may know, I&#8217;ve been experimenting with finding a general solution to parameter chains in Ruby and chaining Arel scopes through collections. Some progress on both fronts by digging through ActiveRecord::Relation and Delegation. If anyone has insight, let me know. Thanks.</p>

<p><a href="https://github.com/cpatuzzo/parameter_chain">https://github.com/cpatuzzo/parameter_chain</a>
<a href="https://gist.github.com/2911869">https://gist.github.com/2911869</a></p>

<h2>Talk to the Phone (Rich A)</h2>

<p><a href="http://www.chromeexperiments.com/detail/talk-to-the-phone/">http://www.chromeexperiments.com/detail/talk-to-the-phone/</a></p>

<p>Is your life a joyless void of malaise and depression?
Need the comfort of human interaction but have no friends?
Experience the delight of uttering those magical words: &#8216;I love you&#8217; into Chrome and receiving a response - any sort of response -  from your beloved browser.</p>

<p>(Man alive, I should be in Marketing or something. I&#8217;m clearly a genius at this sort of stuff.)</p>

<h2>CSS3 comedy (Matt P)</h2>

<p>tr { transform: rotate(180deg); } It seems the tables have been turned.</p>

<h2>A history of IE from version 1 to 9 (Matt P)</h2>

<p><a href="http://www.techrepublic.com/photos/a-visual-history-of-internet-explorer-from-1-to-9/63758">http://www.techrepublic.com/photos/a-visual-history-of-internet-explorer-from-1-to-9/63758</a></p>

<h2>FLAC.js (Matt P)</h2>

<p>a fully Javascript-based FLAC decoder. 8.5% CPU usage on a Core 2 Duo. Crazy.
<a href="http://tumblr.dave.io/post/25228910532/flac-js-a-fully-javascript-based-flac-decoder">http://tumblr.dave.io/post/25228910532/flac-js-a-fully-javascript-based-flac-decoder</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The week the newsletter almost became purple]]></title>
    <link href="http://unboxed.github.com/newsletter/blog/2012/06/15/the-week-the-newsletter-almost-became-purple/"/>
    <updated>2012-06-15T15:44:00+01:00</updated>
    <id>http://unboxed.github.com/newsletter/blog/2012/06/15/the-week-the-newsletter-almost-became-purple</id>
    <content type="html"><![CDATA[<p>First things first: Bender, our lovely campfire bot, now knows how to choose a newsletter author. It works on top of the existing lists api and removes you once you&#8217;ve been chosen. I think it&#8217;s time he made an appearance in the dev chat room&#8230;</p>

<p>But, without further ado:</p>

<h2>xip.io (Andrew)</h2>

<p><a href="http://37signals.com/svn/posts/3191-announcing-pow-040-with-xipio-support">http://37signals.com/svn/posts/3191-announcing-pow-040-with-xipio-support</a></p>

<p>37 Signals last week released the latest version of Pow with support for xib.io, 37 Signals wildcard DNS. You can go read about xip in last weeks newsletter.</p>

<h2>Place Kitten (Matt P)</h2>

<p>In response to my threatening to bomb the newsletter with lolcats I received the following:</p>

<blockquote><p>Well, since you hinted at cats, I have this one to share:
<a href="http://placekitten.com/">http://placekitten.com/</a> - stock images of kittens, sizeable to whatever size you can need. Useful when mocking up a site. Like the lorem ipsum, but with images.</p></blockquote>

<h2>Kogan&#8217;s IE7 Tax (Matt P)</h2>

<p>Here&#8217;s one that did the rounds on twitter yesterday: <a href="http://www.kogan.com/au/blog/new-internet-explorer-7-tax">http://www.kogan.com/au/blog/new-internet-explorer-7-tax</a> - it encourages people to use a sensible browser by inflating prices when IE7 is used. It doesn&#8217;t say how it handles IE6 (or below)&#8230;</p>

<h2>Mina (Murray)</h2>

<p>An alternative to capistrano that, for a change, actually seems to have some benefit: http://nadarei.co/mina/</p>

<p>I&#8217;ve not actually investigated beyond the readme but it also appears to not have quite so many railsy features as capistrano, which could be a good thing if your app is non-standard or non-rails.</p>

<h2>Angular.js (Rob F)</h2>

<p>Angular.js has reached 1.0. It&#8217;s an interesting alternative to the internet&#8217;s darling Backbone and supports declaritive view binding. It comes out of google and apparently has been engineered quite well. I heard that the library earned full time development by winning a bet that an existing application that took 3 months to rebuild could be rebuilt using Angular in 3 weeks. The team won the bet and now work full time on Angular for Google. Or so I&#8217;ve heard&#8230;</p>

<p><a href="http://googledevelopers.blogspot.com/2012/06/better-web-templating-with-angularjs-10.html">http://googledevelopers.blogspot.com/2012/06/better-web-templating-with-angularjs-10.html</a></p>

<h2>Canvas Hands On (Rob F)</h2>

<p>I&#8217;ve been toying with a game idea I want to develop, and to prototype it I&#8217;ve turned to canvas, but I wanted some neato effects. This tutorial walks you through rendering fireworks to the canvas. It also touches on the requestAnimationFrame API which is a must for smooth animations in browsers. Watch out for my game!</p>

<p><a href="http://creativejs.com/tutorials/creating-fireworks/">http://creativejs.com/tutorials/creating-fireworks/</a></p>

<h2>Javascript Garden (Rob F)</h2>

<p>I&#8217;ve been doing some actual JS development this week. I&#8217;m not sure how many of us use JS for more than just $.animate, but JS Garden is a great read of all of the gotchas of Javascript and how to do things the right way.</p>

<p><a href="http://bonsaiden.github.com/JavaScript-Garden/">http://bonsaiden.github.com/JavaScript-Garden/</a></p>

<h2>Zed A. Shaw - The Web Will Die When OOP Dies</h2>

<p><a href="https://vimeo.com/43380467">https://vimeo.com/43380467</a></p>

<p>Thought-provoking talk by Zed Shaw given at the Web Rebels 2012 conference in Norway. Being Zed Shaw, expect profanity and controversial ideas that you probably won&#8217;t agree with. Nevertheless I think there are some very good insights in there, especially in his discussion of HTML, CSS and JavaScript, and how in a perfect world, we wouldn&#8217;t need to work around the huge limitations of these technologies.</p>

<h2>A Haskell Talk (Muz)</h2>

<p>Haskell Talk: <a href="http://yow.eventer.com/events/1004/talks/1054">http://yow.eventer.com/events/1004/talks/1054</a></p>

<p>I know we&#8217;re all mostly ruby and javascript, so we&#8217;re all &#8220;Types, LOL!!!!&#8221;, but this talk about Haskell is really good.  It&#8217;s a good historical overview of haskell and gives good reasons for why types and pure functional programming might be the way forward.  I&#8217;ve not done any Haskell, but after this talk I&#8217;m more inclined to look into it.</p>

<p>It&#8217;s also a good talk to watch to get some speaking tips.  This guy is really charming and enthusiastic, and that can get you a long way towards taking the audience with you on a complicated journey.</p>

<h2>Haskell Platform 2012.2.0 released (Luke R)</h2>

<p><a href="http://hackage.haskell.org/platform/?2012.2.0.0">http://hackage.haskell.org/platform/?2012.2.0.0</a></p>

<p>For those prompted to try Haskell after Murray&#8217;s submission, the good news is that a new release of the Haskell Platform (the easiest way to get started with Haskell) came out recently and has GHC 7.4.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[News News News]]></title>
    <link href="http://unboxed.github.com/newsletter/blog/2012/06/08/news-news-news/"/>
    <updated>2012-06-08T17:48:00+01:00</updated>
    <id>http://unboxed.github.com/newsletter/blog/2012/06/08/news-news-news</id>
    <content type="html"><![CDATA[<h2>Tips for successful pair programming (Lee Richmond)</h2>

<p><a href="https://www.unboxedconsulting.com/blog/tips-for-successful-pair-programming">https://www.unboxedconsulting.com/blog/tips-for-successful-pair-programming</a></p>

<p>Lee wrote his first <a href="https://www.unboxedconsulting.com/blog/tips-for-successful-pair-programming">Unboxed blog post about pair programming</a>. I have paired myself with Lee and found his teqhnique working well and very useful. I especially liked the Pomodoro approach for timing. Nice one Lee!</p>

<h2>Custom DNS tool that resolves wildcard DNS (Matt Pepperell)</h2>

<p><a href="http://xip.io/">http://xip.io/</a></p>

<p>e.g:</p>

<pre><code>10.0.0.1.xip.io               resolves to   10.0.0.1
something.10.0.0.1.xip.io     resolves to   10.0.0.1
somethingelse.10.0.0.1.xip.io resolves to   10.0.0.1
</code></pre>

<p>There are some caveats though. <a href="http://news.ycombinator.com/item?id=4082017">http://news.ycombinator.com/item?id=4082017</a> has details but the tl;dr version is &#8220;Fine if you&#8217;re using it for webservices, probably not fine if you&#8217;re testing DNS itself&#8221;</p>

<h2>HTML5 async (Joerg Diekmann)</h2>

<p><a href="http://davidwalsh.name/html5-async">http://davidwalsh.name/html5-async</a></p>

<p>HTML5 now supports both <em>defer</em> and <em>async</em> to load javascript source files. Both of these load JS scripts asynchronously. What you may ask does &#8220;asynchronous&#8221; mean? Well, let me enlightenâ€¦. Kidding. The difference between the two is that a script tags with <em>defer</em> will be guarantee to execute in order as they appear in your document, whereas <em>async</em> executes as soon as it is downloaded.</p>

<h2>gmaps.js (Carl Whittaker)</h2>

<p><a href="http://hpneo.github.com/gmaps/">http://hpneo.github.com/gmaps/</a></p>

<p>Using the google maps api is a slog. gmaps.js hides the uglyness giving you a pretty straightforward api so you&#8217;re not forced to trawl those nasty google api docs.</p>

<h2>Set flash in redirect_to (Joerg Diekmann)</h2>

<p><a href="http://archives.ryandaigle.com/articles/2009/12/20/what-s-new-in-edge-rails-set-flash-in-redirect_to">http://archives.ryandaigle.com/articles/2009/12/20/what-s-new-in-edge-rails-set-flash-in-redirect_to</a></p>

<p>Did you know - and please, I hope not everybody knows - that you can pass your flash message along with a redirect all in one sugary sweet line?
I also discovered a technique I have longed for for a very long time: Passing a URL with the flash message.</p>

<pre><code>redirect_to posts_path, :alert =&gt; "You cannot do that", :flash =&gt; { :url =&gt; post_path(@post) }
</code></pre>

<p>You can access the URL with <code>flash[:url]</code> â€¦ Obvious really. But elusive.</p>

<h2>Upcoming JavaScript development related HTML5 features (Murray Steele)</h2>

<p><a href="http://weblog.bocoup.com/third-party-javascript-development-future/">http://weblog.bocoup.com/third-party-javascript-development-future/</a></p>

<p>A discussion on some upcoming features for html(5?) that relate to javascript development (mostly about scoping and security).  Despite the whimsical tone of the blog post, the author pretends to have visited the future and talks about how they use these features there all the time and are better for it, it&#8217;s a good overview of these features.</p>

<h2>Greensock Animation Platform V12 now supports JavaScript (Robert Pataki)</h2>

<p><a href="http://www.greensock.com/get-started-js/">http://www.greensock.com/get-started-js/</a></p>

<p>Greensock has been the most handy and most powerful animation tool for ActionScript. V12 is out and yesssss, it supports JavaScript! Check out the project page, and try that banner demo, pretty impressive!</p>

<p><a href="http://www.snorkl.tv/2012/05/banner-style-animation-with-greensock-powered-javascript/">http://www.snorkl.tv/2012/05/banner-style-animation-with-greensock-powered-javascript/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[News of the week]]></title>
    <link href="http://unboxed.github.com/newsletter/blog/2012/06/01/news-of-the-week/"/>
    <updated>2012-06-01T15:22:00+01:00</updated>
    <id>http://unboxed.github.com/newsletter/blog/2012/06/01/news-of-the-week</id>
    <content type="html"><![CDATA[<h2>MS-provided IE testing VMs (Muz)</h2>

<p><a href="https://github.com/xdissent/ievms">https://github.com/xdissent/ievms</a></p>

<p>Simple scripts to slap some of those MS-provided IE testing VMs together and avoid the Windows Genuine Advantage thing timing them out after 30 days.  I&#8217;ve not tried it, because I have one of our Windows XP licenses installed in VirtualBox and MultiIE installed to give me 6, 7, &amp; 8.  However activating that XP license did mean I had to phone MS and convince them I wasn&#8217;t a scammer, so this might be easier than that.  And certainly easier than hunting down the vms someone else in the company has already prepared.</p>

<p>Also has the phrase &#8220;comically large files&#8221; in the README.  WHAT IS NOT TO LIKE?</p>

<h2>Modifier keys and pushState (Carl)</h2>

<p>A common pattern is to intercept clicks on anchors and pass them through xhr. This can lead to some pretty frustrating usability issues with tabbed browsing among other things. This article suggests how to properly intercept anchors.</p>

<p><a href="http://dev.tenfarms.com/posts/proper-link-handling">http://dev.tenfarms.com/posts/proper-link-handling</a></p>

<h2>Sinon.JS (Carl)</h2>

<p>I&#8217;ve been using this for a while and it&#8217;s simply the best way i&#8217;ve found to test async javascript. If you haven&#8217;t seen it before give it look.</p>

<p><a href="http://sinonjs.org/">http://sinonjs.org/</a></p>

<h2>D3 (Carl)</h2>

<p>We&#8217;re using this on storyweb to create visualisations of user metrics. It&#8217;s pretty damned awesome (check out the demos). When coupled with Raphael to do the rendering we&#8217;ve even got it running in IE7.</p>

<p><a href="http://d3js.org/">http://d3js.org/</a></p>

<h2>Zeroes (Carl)</h2>

<h3>Ohh javascript</h3>

<p><a href="http://zero.milosz.ca/">http://zero.milosz.ca/</a></p>

<h2>Vanity A/B testing (Andy)</h2>

<p>So after doing a lot of prototype based work with Reevoo of late i have been looking into ways which we could carry out A/B tests on our projects. Unfortunately &#8216;Limited Exposure&#8217;, an app created here at Reevoo by Tom, is currently not available publicly and requires a little thought towards making this open source (it&#8217;s in the pipeline though!). So instead i&#8217;ll l;et you all take a look at this which seems to be a better implementation in ruby land (unlike LE which uses an api which can be hit using js.
<a href="http://vanity.labnotes.org/#intro">http://vanity.labnotes.org/#intro</a></p>

<h2>be_valid_asset update (Jolyon)</h2>

<p><a href="https://github.com/unboxed/be_valid_asset">be_valid_asset</a> has been updated and released as version 1.2.1. Version 1.2.0 was an unfortunate dogs dinner. Tests now run using rspec2 and the be_valid_xhtml matcher has been deprecated and replaced by the more generic and html5 friendly be_valid_markup.</p>

<h2>Chris&#8217; Rack (Chris)</h2>

<p>I built a rack extension for serving highlighted source code that uses GitHub&#8217;s Pygments gem. It might be of use.</p>

<p><a href="https://github.com/cpatuzzo/rack-source">https://github.com/cpatuzzo/rack-source</a></p>

<h2>Rails updates (Leo)</h2>

<p><a href="http://weblog.rubyonrails.org/2012/5/31/ann-rails-3-2-4-has-been-released/">http://weblog.rubyonrails.org/2012/5/31/ann-rails-3-2-4-has-been-released/</a></p>

<p>Rails 3.2.4 has been released. Most notably, it provides fixes for two separate SQL injection bugs.</p>

<p>I encourage you all to read through the two security announcements and perhaps consider applying the patch to all our Rails 3 projects (in situations where upgrading to 3.2.4 is impossible, of course). Neither of them are incredibly serious vulnerabilities, but naturally it&#8217;s best to err on the side of caution.</p>

<p>On that note, 3.2.5 was also released, as a regression was discovered in 3.2.4. So if we want to upgrade some of our newer apps (e.g. Apps for Good), then 3.2.5 is where it&#8217;s at.</p>

<h2>The Long one (Attila)</h2>

<h3>Meteor. Yet another JS framework? Not quite&#8230;</h3>

<p><a href="http://meteor.com">http://meteor.com</a></p>

<p>I&#8217;ve seen quite a few JS frameworks, there&#8217;s Express, Mojito (<a href="http://developer.yahoo.com/cocktails/mojito/">http://developer.yahoo.com/cocktails/mojito/</a>) and about another gazillion different MVC, MVVM and MMVVCXYZ frameworks and such. Most of them look nice and promising for the first sight, then turn out to be a pain to work with.</p>

<p>And there&#8217;s Meteor. &#8220;Meteor is a set of new technologies for building top-quality web apps in a fraction of the time&#8221;. That is supposed to be the same rapid prototyping that Rails became famous for.</p>

<p>But anyway, it&#8217;s not just another framework on top of Node. To me it is more interesting, mainly because of the following reasons:</p>

<ul>
<li>Meteor is &#8220;just&#8221; a framework that intelligently glues &#8220;smart packages&#8221; together</li>
<li>It is supposed to be highly modular</li>
<li>You are not restricted to use CoffeeScript or MongoDB or Backbone, but you can if you want to. Anything that you can wrap within a &#8220;smart package&#8221;.</li>
<li>Smart packages wrap up additional functionality and can hook into the stack</li>
<li>You can use the same API on both client- and server-side devices, meaning you write non-repetative code</li>
</ul>


<p>What really blew me away is when I&#8217;ve seen how you can use Mongo commands within the browser to work with &#8220;models&#8221; and it all gets synchronised automatically with the server and other connected clients.
This is a very interesting new approach if you think about it, that&#8217;s probably the reason why they got $9M in funding recently. <a href="http://gigaom.com/cloud/scoop-meteor-gets-9m-in-funding/">http://gigaom.com/cloud/scoop-meteor-gets-9m-in-funding/</a></p>

<ul>
<li>You should totally watch the screencast: <a href="http://meteor.com/screencast">http://meteor.com/screencast</a></li>
<li>You should read what is the mission of the project: <a href="http://meteor.com/about/mission">http://meteor.com/about/mission</a></li>
<li>You should totally download it and fiddle around with it</li>
</ul>


<h3>Up to date ubxd-ruby1.9.3 debian package</h3>

<p>You may not know but we have our own Debian package that we use to install Ruby on our servers. Alex has started it, currently it has 1.9.3-p125 packaged in it. As of today, version 1.9.3-p194 is the latest production release of Ruby so therefore our package is outdated. Now, I like up-to-date software and given that Alex is not here anymore, I decided to pick this up where he left it. In the past I&#8217;ve done no debian packaging but I learned all the basics in 2 days during my holiday recently. I am going to try upgrading the package but it would be great to know if anybody else has done something similar to this before and could potentially collaborate with me on this.</p>

<p>Funnily enough I&#8217;ve found no up-to-date version on Ubuntu&#8217;s Launchpad so it&#8217;s time to make one. For a fact I know that other (non-ubxd) people are using our publicly available APT repository too, here&#8217;s a gist on how to make use of it:
<a href="https://gist.github.com/1472705">https://gist.github.com/1472705</a></p>

<p>I am also planning on applying some of the available performance and improved garbage collection patches taht are available.</p>

<p>Hit me up if you are interested in helping out.</p>

<h2>New Rails spell (Will)</h2>

<p>I just love it when you think to yourself &#8216;I reckon there&#8217;s probably a method which does this&#8217;, and there is. Here&#8217;s one I I recently discovered which clears up a commonly seen and somewhat ugly pattern.</p>

<p>Lets say you have a model, &#8216;Cindy&#8217;, and Cindy has_many AnnoyingFriends.  Lets also say you have a form to edit Cindy (a bit like plastic surgery).  That form must contain a multiple select where you can choose which annoying_freinds are associated with Cindy.  Additionally when an annoying_friendship is broken, that annoying_friend must be DESTROYED.  Your form posts an array of annoying_friend_ids which should be associated with Cindy.</p>

<p>Typically you will have a nasty block of code in you controller somewhere which does something along the lines of this:</p>

<ul>
<li>Find all annoying_friends attached to Cindy which are not in <code>params[:annoying_friend_ids]</code> and DESTROY them.</li>
<li>Throw out all ids in <code>params[:annoying_friend_ids]</code> which are already attached to Cindy</li>
<li>Create new friendships for the remaining ids.</li>
</ul>


<p><em>Happily we don&#8217;t need to do this again&#8230; ever&#8230;</em></p>

<p>Maybe everyone else already knows about this, but rails generates a couple of methods for you.</p>

<p>This works:</p>

<p><code>cindy.update_attribute(:annoying_friend_ids, params[:annoying_friend_ids])</code></p>

<p>or</p>

<p><code>cindy.annoying_friend_ids = params[:annoying_friend_ids]</code></p>

<p>and rails will take care of the rest of the mess.  Rails does make sure that actual records exist for each of the ids passed in. Additionally there&#8217;s a getter which is useful for pre-populating form input values.</p>

<p>I&#8217;ve got no idea how long these magic methods have been there since I can&#8217;t find any documentation on them.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Week Of Winning]]></title>
    <link href="http://unboxed.github.com/newsletter/blog/2012/05/25/the-week-of-winning/"/>
    <updated>2012-05-25T15:00:00+01:00</updated>
    <id>http://unboxed.github.com/newsletter/blog/2012/05/25/the-week-of-winning</id>
    <content type="html"><![CDATA[<p>This weeks instalment is awesome, mainly due to the lack of content from its author. Enjoy!</p>

<h2>Railsy/Ruby Stuffs</h2>

<h3><a href="http://www.rubymotion.com/">RubyMotion</a> (courtesy of Lee and Robert F)</h3>

<p>It&#8217;s a toolset that sits on top of the iOS development tools to allow you to use Ruby to build iOS applications.</p>

<p>this is something I&#8217;ve been speaking to Richard about trialling and will be doing so to build the UBXD expenses app in the near future.</p>

<p><a href="http://rubyweekly.us1.list-manage.com/track/click?u=0618f6a79d6bb9675f313ceb2&amp;id=e1dc28d2b9&amp;e=3fcba5cd8e">Live</a> is a gem for RubyMotion implementing some of the ideas presented in Bret Victorâ€™s awesome &#8216;Inventing on Principle&#8217; talk. It interfaces with the REPL and allows you to control it from the comfort of your preferred text editor.</p>

<h3><a href="http://rubyweekly.us1.list-manage1.com/track/click?u=0618f6a79d6bb9675f313ceb2&amp;id=930588937e&amp;e=3fcba5cd8e">Objectify</a>: A Better Way to Build Rails Applications (courtesy of Robert F)</h3>

<p>Objectify is a framework that codifies good object oriented design practices for building maintainable Rails applications. In this post, James Golick explains the motivations.</p>

<h3>Spec Naming (courtesy of Murray)</h3>

<p>A nugget from the StoryWeb specs:</p>

<pre><code>describe "is_recommendable_to_recipient?" do
  before :each do
    @workgroup = Workgroup.make!(:name =&gt; 'The Giraffes')
    @user = User.make!
  end

  context "for a workgroup" do
    it "should be true" do
      Story.make!(:published, :workgroups =&gt; [@workgroup]).is_recommendable_to_recipient?(@workgroup).should be_true
    end

    it "should be false" do
      Story.make!.is_recommendable_to_recipient?(@workgroup).should be_false
    end
  end
</code></pre>

<p>Those example names come down to: &#8220;is_recommendable_to_recipient? for a workgroup should be true&#8221; and &#8220;is_recommendable_to_recipient? for a workgroup should be false&#8221;.  That&#8217;s not super helpful when examining the specdoc output.  Take a moment to name your specs with care, so that I don&#8217;t have to read the code within them to work out why it &#8220;should be true&#8221;.  For me, better names would be:</p>

<p>&#8220;is_recommendable_to_recipient? for a workgroup should be true if the workgroup does not belong to the story&#8221; and
&#8220;is_recommendable_to_recipient? for a workgroup should be false if the workgroup belongs to the story&#8221;</p>

<p>Of course, there may be shorter ways to express this, and they would be fine too, but my point stands.  The names of all the specs, when read together should be enough to describe the behaviour of the object under spec without me reading the contents of the spec.</p>

<h2>Dev things</h2>

<h3>Jenkins Power (courtesy of Jolyon (or James if you work in Starbucks))</h3>

<p>You gotta love a <a href="http://jenkins-ci.org/">CI</a> that enables you to specify a git repo and then runs tests on any branch that changes. But hold on just one second I hear you say, that&#8217;s not ideal if you&#8217;re working on a feature branch and the tests aren&#8217;t yet passing. Easily solved. Just specify the branches that you want to run tests against in the <a href="https://jenkins.unboxedconsulting.com/job/Five_Capetown/configure">project configuration</a>. Power to the people.</p>

<h3>Cross-browser testing (courtesy of Austin)</h3>

<p>An article outlining the set-up of (hopefully) optimal <a href="http://coding.smashingmagazine.com/2011/09/02/reliable-cross-browser-testing-part-1-internet-explorer/">browser testing</a></p>

<h2>More things!</h2>

<h3>New EU Cookie Law (courtesy of Murray and Leo)</h3>

<p>A <a href="http://gilest.org/20120517-cookie-law-text.html">public domain letter</a> for web developers to send to their clients about the <a href="http://www.theregister.co.uk/2012/05/18/cookie_law_ico/">new EU cookie law</a> that comes into law at the end of this month:</p>

<p>Seems pretty sensible and if you don&#8217;t already know what the law is, this is as good and simple a rundown as any I&#8217;ve read.</p>

<h3>Colour Gradient Generator (courtesy of Matt P)</h3>

<p>I found <a href="http://www.herethere.net/~samson/php/color_gradient/">this</a> a couple of weeks ago when working on something with Matt F.
It allows you to specify a start colour, an end colour, and a number of steps, and it will generate the evenly spaced colours which lie between.
As a side note, some of the wording on the WebApp is a bit confusing. The number being asked for is the number of steps in total, i.e. the number of colours included in the range will be 1 higher than this, or 1 less than the number of new colors generating (not counting the start and end point you specify).</p>

<h2>Events</h2>

<h3>Mobile Hack-a-Jam-a-Mashup-Athon (courtesy of Seb)</h3>

<p>Theres is a <a href="http://digitalshoreditch.com/hack/">hack day</a> being run at the Google Campus tomorrow as part of Digital Shoreditch.
I only found out about it today, looks like it could be interesting.</p>

<h2>Saving the best for last (courtesy of Luke)</h2>

<h3><a href="http://blog.objectmentor.com/articles/2007/11/02/active-record-vs-objects">Uncle Bob on the problem with ActiveRecord</a></h3>

<h3><a href="http://www.drdobbs.com/architecture-and-design/240000393">Dr. Dobbs interviews Ward Cunningham</a> on the wiki, OO design, and all sorts of other stuff.</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The week that was]]></title>
    <link href="http://unboxed.github.com/newsletter/blog/2012/05/18/the-week-that-was/"/>
    <updated>2012-05-18T14:00:00+01:00</updated>
    <id>http://unboxed.github.com/newsletter/blog/2012/05/18/the-week-that-was</id>
    <content type="html"><![CDATA[<p>Welcome to this weeks installment. @jpawlyn submits for your consideration the following tasty crumpets from the land of tech.</p>

<h2>Mac OS</h2>

<h3>View plain text files without a file extension - @sren via @markscholtz and @Iron_Matt</h3>

<p>A <a href="https://github.com/whomwah/qlstephen">QuickLook plugin</a> that lets you view plain text files without a file extension.</p>

<h2>Rails</h2>

<h3>RailsConf 2012 - @hlame</h3>

<p>This week I watched 3 of the keynotes from RailsConf 2012:</p>

<ul>
<li>DHH on <a href="http://www.confreaks.com/videos/854-railsconf2012-keynote-progress">Progress</a></li>
<li>Aaron Patterson on <a href="http://www.confreaks.com/videos/880-railsconf2012-keynote-i-ve-made-a-huge-mistake">I&#8217;ve made a huge mistake</a></li>
<li>Yehuda Katz on <a href="http://www.confreaks.com/videos/907-railsconf2012-rails-the-next-five-years">Rails: The next five years</a></li>
</ul>


<p>I would genuinely say don&#8217;t bother.  DHH goes on for way too long without really saying anything other than progress means change, Rails 4 will change, Rails 4 will break things, but it will be better so stop complaining and just live with it. Also, in characteristic style, he tells you to fuck off if you don&#8217;t agree.</p>

<p>Aaron Patterson basically skirts around the same issues in much less time, actually, I struggle to remember what his point was.</p>

<p>Finally, Yehuda actually spends most of his talk speaking about the past 5 years of Rails and where it&#8217;s been rather than where it&#8217;s going.  He makes some good points about (again) not complaining when something appears in Rails that you don&#8217;t like, or don&#8217;t think should be part of the core.  It&#8217;s usually a good idea so that things get wide usage and standardised to work out the bugs.  It&#8217;s not till the last quarter of the talk that he mentions some things that might go into the next versions of Rails (JSON serializers as first class objects), but it&#8217;s hardly &#8220;next five years&#8221;, I&#8217;d argue that it&#8217;s not even &#8220;next five months&#8221;.</p>

<p>Anyway, there are loads of other talks to watch online and I&#8217;d say that these 3 keynotes aren&#8217;t worth your time. There are some good points in them, but not enough to warrant spending the ~2hrs it would take to watch all 3; seek out some write-ups and notes and you&#8217;ll get all the good points much quicker.</p>

<h3>CanCan - Grant</h3>

<p>I really love this library and usually use it by default on all my personal projects plus I usually update my controller generators to use this by default.
So I recommend we use this on all our new projects :)</p>

<p><a href="https://github.com/ryanb/cancan">CanCan</a> is an authorization library for Ruby on Rails which restricts what resources a given user is allowed to access. All permissions are defined in a single location (the Ability class) and not duplicated across controllers, views, and database queries.</p>

<h2>Markup and Javascript</h2>

<h3>Maps - Joerge boy</h3>

<p>If we want to use maps - we are not limited to Google. Even if we have written a lot of javascript code already that deals with the Google Maps API - that&#8217;s not a problem. Because - part of the Google API - version 3 at least - you can swap out the mapping tiles for more attractive looking tiles - either from OpenStreetMap (OSM) directly - or for even more attractive tiles from Stamen.</p>

<p><a href="http://maps.stamen.com">http://maps.stamen.com</a></p>

<p>Just add the following code where you fire up maps, and drool over the difference.</p>

<pre><code>// replace "toner" here with "terrain" or "watercolor"
var layer = "toner";
var map = new google.maps.Map(document.getElementById("element_id"), {
    center: new google.maps.LatLng(37.7, -122.4),
    zoom: 12,
    mapTypeId: layer,
    mapTypeControlOptions: {
        mapTypeIds: [layer]
    }
});
map.mapTypes.set(layer, new google.maps.StamenMapType(layer));
</code></pre>

<h3>Ripple Effect - Matt P</h3>

<p>A few weeks ago I discovered this gem (no, not the ruby kind) via twitter:
 - <a href="http://alligator.github.com/lake.js/">How to add an animated ripple effect to water images</a></p>

<h3>WTFWG - Carl</h3>

<p>Hacker news continues to play the role of daily mail for devs and I do so love standardisation rage bait.</p>

<p>srcset gets in over picture QQ</p>

<p><a href="http://timkadlec.com/2012/05/wtfwg/">http://timkadlec.com/2012/05/wtfwg/</a></p>

<h2>Programming and Architecture</h2>

<h3>State Machines - Tony</h3>

<p>Was a nice recap on <a href="http://blog.markwshead.com/869/state-machines-computer-science/">state machines</a>. It&#8217;s a good thing for everyone to know and I&#8217;ve seen too many projects with complicated processes which would be more appropriate with a state machine.</p>

<h3>Smorgasbord - @Iron_Matt</h3>

<p><a href="http://www.drdobbs.com/architecture-and-design/240000393">Ward Cunningham</a> interviewed on the occasion of winning the Dr Dobb&#8217;s Excellence In Programming Award.
Wiki inventor, Agile Manifesto co-signatory, Smalltalk ninja, Sublime Text 2 user and undoubted troll-bait for Tilly due to his love for CoffeeScript <em>and</em> node.js.</p>

<p><a href="http://www.drdobbs.com/architecture-and-design/227400034">&#8216;Brogrammer&#8217;? &#8216;Rock Star&#8217;?</a>  Thanks but I&#8217;d rather collaborate with <a href="http://www.drdobbs.com/architecture-and-design/227400034?pgno=2">these folk</a>
Especially Larry Wall, King of the Hawaiian Shirt-sported-in-the-workplace</p>

<p>I&#8217;ve been documenting <a href="https://wiki.unboxedconsulting.com/wiki/Non-functional_Requirements">Non-functional Requirements</a> on our wiki as part of the ISO9001 work.  All contributions are welcome.  Just imagine if there were actual flaming torches on the wall monitoring our hardware&#8230;</p>

<h3>Rating Systems - Matt P</h3>

<p>Imagine you have a site with some form of voting or rating sytem.  How should you sort the rated items? Your probable initial guess of &#8220;just calculate the average&#8221; is wrong - see why by reading <a href="http://evanmiller.org/how-not-to-sort-by-average-rating.html">this</a>
(This one happily contains a ruby fragment)</p>

<h2>DBs</h2>

<h3>Goodbye MongoDB - Carl</h3>

<p>Everyone seems to be hating on mongo right now and having been in a similar situation I can sympathise with the reasoning behind <a href="http://www.zopyx.de/blog/goodbye-mongodb">this article</a>.</p>

<p>When someone from your database vendor comes into your office and suggests you throw more tin at a problem, you&#8217;re in trouble.</p>

<h2>Sysadmin</h2>

<h3>Server monitoring - @sren via @Iron_Matt</h3>

<p>A <a href="http://nerds.airbnb.com/monitoring-your-serverswith-fire">nice post</a> from AirBnB about monitoring servers with fire lamps.
Harnessing the power of the elements for the purpose of monitoring is a brilliant way to focus teams on NFRs.</p>

<h2>Notices</h2>

<h3>7 Languages in 7 Weeks - Matt P</h3>

<p>Starting next Wednesday, I will be undertaking a project called 7 Languages in 7 Weeks.  1-2 hours over 3 days is all that&#8217;s required so if you are looking for another time-sink then look no further! It&#8217;s currently me and 2 other friends taking part, but any one else interested would be more than welcome. We&#8217;ll be covering Ruby, Io, Prolog, Scala, Erlang, Clojure and Haskell, and no prior experience in any of the languages is required. I&#8217;ve brought the book in with me today, for if anybody wants to take a gander.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The week in links]]></title>
    <link href="http://unboxed.github.com/newsletter/blog/2012/05/11/the-week-in-links/"/>
    <updated>2012-05-11T15:46:00+01:00</updated>
    <id>http://unboxed.github.com/newsletter/blog/2012/05/11/the-week-in-links</id>
    <content type="html"><![CDATA[<p>Welcome to this weeks installment. I - your humble guest editor, Luke R. - submit for your consideration the following lovingly curated selection of internets.</p>

<h2>Ruby</h2>

<h3>Koans of wisdom - Robert P.</h3>

<p>I&#8217;ve still been learning Ruby and RoR, which is a very interesting learning curve. Amongst the countless screencasts and tutorials I&#8217;ve found, there are some really nice and effective learning tools.</p>

<p>These are the ones I like the most: You can learn by doing code - and you can do it in your browser. You need to sign up for these (all free), so the system can track your progress and reputation.</p>

<ul>
<li><a href="http://rubeque.com/problems">http://rubeque.com/problems</a></li>
<li><a href="http://rubykoans.com/">http://rubykoans.com/</a> (There is a proper local version, which is a proper TDD emulation with 180 errors)</li>
<li><a href="http://rubymonk.com/">http://rubymonk.com/</a></li>
</ul>


<p>Check them out, as a newbie I&#8217;d definitely recommend them all.</p>

<h3>Dumpster diving in the Rails source - Matt P.</h3>

<p>As a newcomer to rails, I was impressed that it knew that the plural of &#8220;person&#8221; is &#8220;people&#8221;.  Then I wondered how it knew.  A bit of digging around in the source tree and I found <a href="https://github.com/rails/rails/blob/6c367a0d787705746f262d0bd5ad8c4f13a8c809/activesupport/lib/active_support/inflections.rb">active_support/inflections.rb</a> &#8211; and learned that an acceptable (albeit archaic) plural of the word &#8220;cow&#8221; is &#8220;kine&#8221;.</p>

<h3>Mixins - a refactoring anti-pattern - Murray S.</h3>

<p>This <a href="http://blog.steveklabnik.com/posts/2012-05-07-mixins--a-refactoring-anti-pattern">http://blog.steveklabnik.com/posts/2012-05-07-mixins&#8211;a-refactoring-anti-pattern</a> was quite an interesting discussion about refactoring and complexity.</p>

<h2>Conferences</h2>

<h3>Ruby Lugundum - Murray S.</h3>

<p><a href="http://rulu.eu">http://rulu.eu</a></p>

<p>The 2nd version of Ruby Lugundum (a 2 day conference in Lyon, France, end of June).  I didn&#8217;t hear anything about their first one last year, I think it was a pretty small affair.  This year&#8217;s looks more professional and interestingly it seems to have <a href="http://rulu.eu/2012/05/10/speakers.html">a lineup</a> that isn&#8217;t full of the same old faces spouting the same old talks.  Might be worth going to, and it&#8217;s only 80â‚¬.</p>

<h2>Text editing</h2>

<h3>Tmux and the pasteboard - Mark S.</h3>

<p>Do you use tmux? Do you use vim? Does trying to copy and paste between applications within tmux and other OS X apps annoy you? Read <a href="http://robots.thoughtbot.com/post/19398560514/how-to-copy-and-paste-with-tmux-on-mac-os-x">this post</a> by Thoughbot to minimise a small, but daily frustration. I ignored the last bit about the shell script for tmux buffers and instead used <a href="http://unix.stackexchange.com/a/32451">this Unix StackExchange answer</a>.</p>

<p>If you are interested in the details of why the pasteboard is not accessible from within tmux on OS X read <a href="https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/blob/master/README.md">this</a>.</p>

<h2>Text editing for the less discerning developer</h2>

<h3>Sublime Text 2 - Command-Line Integration That Doesn&#8217;t Enrage My Inner Pedant - Matt F.</h3>

<p>Risking public shame, Matt F. not only shared that he is a Sublime Text user, but also some command line tips for other Sublime users:</p>

<p>I started using Sublime Text 2 during Blackadder&#8217;s little vacation last week whilst Krispy, a.k.a. Chris C, a.k.a. <em>not</em> the creator of &#8216;The X-Files&#8217; and I groped our way through AppsForGood.  (I&#8217;m pleased to report the groping has continued this week vis a vis the Unboxed Website, albeit on a solo basis&#8230;</p>

<p>Sublime Text 2 ships with a command line tool named <code>subl</code> to work with files <a href="http://www.sublimetext.com/docs/2/osx_command_line.html">on the command line</a>.  For some reason continually typing <code>subl</code> enraged my inner pedant. I wanted my invocation of the application to be more meaningful to me as the invoker.</p>

<p>I therefore used the mystifyingly-popular knowledge trough called &#8216;the internet&#8217; to discover this - <a href="https://gist.github.com/1236170">https://gist.github.com/1236170</a>.  Now I can invoke sublime on the command line using <code>sublime</code> instead of <code>subl</code>. A few more keystrokes are required but importantly less mental kittens die.</p>

<h2>Know your history</h2>

<h3>Computer Science - History Is Important - Matt F.</h3>

<p>Julian Simpson (a.k.a. <a href="http://twitter.com/thebuilddoctor">@thebuilddoctor</a>) tweeted a link to this web log post a while back - <a href="http://www.blackliszt.com/2012/03/computer-history.html">http://www.blackliszt.com/2012/03/computer-history.html</a>. I&#8217;ve only just got round to reading it though.  The post argues that software is often a predominantly a-historical discipline which is to its detriment. This is interesting to me because on every new project I work on, I feel I forget to remember the lessons I learnt from the mistakes I made during previous projects.</p>

<h2>Attila</h2>

<p>As always, the ever popular Attila section. This week he regales us with Bundler tips, issues with Readability, Alfred searches and the final word on LESS. Like the Macalope, you can wait till the end of the week to read what he has to say, or for the impatient, subscribe to developers@ubxd.com for the early edition.</p>

<h3>Bundler updates</h3>

<p>So you have been using .rvmrc or .rbenv-version files to keep track of what version of Ruby is required for your project, right? Well, maybe there&#8217;s an even better way coming:</p>

<p>Ruby version dependencies straight in your Gemfile. Coming soon to a Terminal near you:</p>

<pre><code>source 'http://rubygems.org'

ruby '1.9.3'
gem  'rails', '3.2.3'
</code></pre>

<p>You can install a prerelease version of Bundler already today:
<code>gem install bundler --pre</code></p>

<p>There&#8217;s an article on the Heroku blog about this, make sure to read <a href="http://blog.heroku.com/archives/2012/5/9/multiple_ruby_version_support_on_heroku">http://blog.heroku.com/archives/2012/5/9/multiple_ruby_version_support_on_heroku</a>
I&#8217;m looking forward to RVM and RBenv to hook into these if possible and provide us a seamless switch between different projects that use different versions of Ruby.</p>

<h2>Readability Article Publishing Guidelines</h2>

<p>It has come to my attention that we might need to shape our markup-fu a little bit. When I tried to save Andrew&#8217;s recent article from the Unboxed Blog to my Readability account I noticed that the artcle parsing was not quite successful, more precisely Readability picked up &#8220;Unboxed Blog&#8221; as the article title as opposed to &#8220;Code maintainability - is it a test thing?&#8221;. Find the example <a href="http://www.readability.com/articles/g9qlxgpx">here</a>.</p>

<p>After a tiny bit of googling I found this <a href="http://www.readability.com/publishers/guidelines">helpful article</a> on the Readability website that has reasonable markup crafting suggestions to everybody.</p>

<p>Note that it is not only intended to be used for Readability but the suggestions there are quite reasonable for every day markup crafting. I guess my main point is that rather than just throwing a bunch of <code>&lt;div&gt;s</code> onto the browsers, it has become quite clear that how much additional functionality and data you can get by crafting your markup right.</p>

<h2>Alfred custom searches</h2>

<p>By now you probably know that you can add customised searches to Alfred. I&#8217;ve been using these for a while and thought that maybe others would make good use of them too:</p>

<pre><code>Search title: Search Github for
URL: http://github.com/search?q={query}
keyword: gh

Search URL: https://www.ruby-toolbox.com/search?utf8=%E2%9C%93&amp;q={query}
title: Search The Ruby Toolbox for
keyword: rtb

Search URL: http://rubygems.org/search?utf8=%E2%9C%93&amp;query={query}
title: Search RubyGems for
keyword: gem
</code></pre>

<p>In order to add them, go to Alfred&#8217;s preferences, look for &#8220;Custom Searches&#8221; in the sidebar and add them if you want. Happy searching!</p>

<h2>Less is more. Really.</h2>

<p>This one is just for trolling Will and maybe as a response to his latest rants on Less last week. I don&#8217;t know at this point if it&#8217;s worth coming up with yet another debate around this subject, I&#8217;ve had my examples in the past and I started to think that not every single tool fits every person. Less, just like anything else might be your thing or might not be.</p>

<p>However, I think that the same way just like any other tool can be used wisely and could provide huge benefits to your project.</p>

<h2>Diversions</h2>

<h3>Wolfenstein 3D - Rich A.</h3>

<p>Since we live in a glorious new age where we <strike>no longer have to wait for code to compile</strike> have to wait for tests to run, Rich A. wrote in with news of a web-based <a href="http://wolfenstein.bethsoft.com/game/wolf3d.html">Wolfenstein 3D</a> to keep you busy while cucumber is cucumbering.</p>
]]></content>
  </entry>
  
</feed>
